plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
//    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin' version '2.0.1'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "hawaiiappbuilders.udx"
        minSdkVersion 23
        targetSdkVersion 33
        versionCode 90
        versionName "4.7.12"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            Properties properties = new Properties()
            if (project.rootProject.file('local.properties').canRead()) {
                properties.load(project.rootProject.file("local.properties").newDataInputStream())
            }

            buildConfigField "String", "G", properties.getProperty('G')
            buildConfigField "String", "P", properties.getProperty('P')
            buildConfigField "String", "PM", properties.getProperty('PM')
            buildConfigField "String", "H1", properties.getProperty('H1')
            buildConfigField "String", "Ky", properties.getProperty('Ky')
            buildConfigField "String", "D", properties.getProperty('D')

        }

        debug{
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            Properties properties = new Properties()
            if (project.rootProject.file('local.properties').canRead()) {
                properties.load(project.rootProject.file("local.properties").newDataInputStream())
            }

            buildConfigField "String", "G", properties.getProperty('G')
            buildConfigField "String", "P", properties.getProperty('P')
            buildConfigField "String", "PM", properties.getProperty('PM')
            buildConfigField "String", "H1", properties.getProperty('H1')
            buildConfigField "String", "Ky", properties.getProperty('Ky')
            buildConfigField "String", "D", properties.getProperty('D')
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/INDEX.LIST'
        exclude("META-INF/*.kotlin_module")
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            def flavor = variant.name
            def versionName = variant.versionName
            //outputFileName = "app${flavor}_${versionName}.apk"
            outputFileName = "UDS_${versionName}.apk"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.cardview:cardview:1.0.0'

    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'

    //-- Google Map And Firebase --
    implementation 'com.google.android.gms:play-services-maps:18.2.0'
    implementation "com.google.android.gms:play-services-location:16.0.0"
    implementation 'com.google.maps.android:android-maps-utils:3.8.2'

    implementation 'org.slf4j:slf4j-simple:1.7.25'

    // Import the Firebase BoM
    // implementation platform('com.google.firebase:firebase-bom') //:26.8.0

    implementation 'com.google.firebase:firebase-messaging:23.1.1'
    implementation "com.google.firebase:firebase-iid:21.1.0"

    //implementation 'com.google.firebase:firebase-core:16.0.4'
    implementation 'com.google.firebase:firebase-auth:19.4.0'
    implementation 'com.google.firebase:firebase-database:19.4.0'
    implementation 'androidx.lifecycle:lifecycle-process:2.5.1'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'com.android.volley:volley:1.1.1'
    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'com.budiyev.android:code-scanner:2.1.0'

    implementation project(':countrycodepicker')
    implementation project(':segmentedcontrol')
    // Biometrics Authentication
    implementation "androidx.biometric:biometric-ktx:1.2.0-alpha02"

    implementation 'com.google.cloud:google-cloud-apikeys:0.3.0'
    implementation "androidx.security:security-crypto:1.0.0"

    implementation 'com.google.zxing:core:3.4.1'// Or latest stable version
//    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'

    implementation 'io.agora.rtc:full-sdk:4.3.2'
}